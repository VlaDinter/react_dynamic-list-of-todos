{"version":3,"sources":["components/Header/Header.tsx","components/Todo/Todo.tsx","components/TodosList/TodosList.tsx","components/View/View.tsx","components/Error/Error.tsx","api.ts","components/LoadButton/LoadButton.tsx","App.tsx","index.tsx"],"names":["Header","className","Todo","todo","title","completed","user","name","TodosList","todos","map","key","id","View","useState","todosSortBy","setTodosSortBy","sort","todo1","todo2","localeCompare","type","onClick","Error","getData","url","fetch","then","response","json","data","LoadButton","setTodos","setIsLoaded","setIsLoadingError","isLoading","setIsLoading","load","a","users","length","find","userId","disabled","App","isLoadingError","isLoaded","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6346bbb0.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Header: React.FC = () => (\n  <h1 className=\"app__header\">Dynamic list of TODOs</h1>\n);\n","import React from 'react';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const Todo: React.FC<Props> = ({ todo }) => (\n  <li className=\"app__item\">\n    <h1 className=\"app__item-header\">{todo.title}</h1>\n    <p className=\"app__item-text\">\n      {todo.completed ? 'completed' : 'uncompleted'}\n    </p>\n    <p className=\"app__item-name\">{todo.user ? todo.user.name : 'none'}</p>\n  </li>\n);\n","import React from 'react';\n\nimport { Todo } from '../Todo/Todo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodosList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"app__list\">\n    {todos.map(todo => <Todo key={todo.id} todo={todo} />)}\n  </ul>\n);\n","import React, { FC, useState } from 'react';\n\nimport { TodosList } from '../TodosList/TodosList';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const View: FC<Props> = ({ todos }) => {\n  const [todosSortBy, setTodosSortBy] = useState<string>('title');\n\n  switch (todosSortBy) {\n    case 'title':\n      todos.sort((todo1, todo2) => todo1.title.localeCompare(todo2.title));\n      break;\n\n    case 'completed':\n      todos.sort((todo) => (todo.completed ? 1 : -1));\n      break;\n\n    case 'name':\n      todos.sort((todo1, todo2) => {\n        if (todo1.user && todo2.user) {\n          return todo1.user.name.localeCompare(todo2.user.name);\n        }\n\n        return 1;\n      });\n      break;\n\n    default:\n      todos.sort((todo1, todo2) => todo1.title.localeCompare(todo2.title));\n      break;\n  }\n\n  return (\n    <div className=\"app__view\">\n      <button\n        className=\"app__view-button\"\n        type=\"button\"\n        onClick={() => setTodosSortBy('title')}\n      >\n        Sort by title\n      </button>\n      <button\n        className=\"app__view-button\"\n        type=\"button\"\n        onClick={() => setTodosSortBy('completed')}\n      >\n        Sort by completed\n      </button>\n      <button\n        className=\"app__view-button\"\n        type=\"button\"\n        onClick={() => setTodosSortBy('name')}\n      >\n        Sort by name\n      </button>\n      <TodosList todos={todos} />\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Error: React.FC = () => (\n  <p className=\"app__error\">Try again</p>\n);\n","export const getData = <T>(url: string): Promise<T[]> => {\n  return fetch(url)\n    .then(response => response.json())\n    .then(response => response.data);\n};\n","import React, { FC, useState } from 'react';\n\nimport { getData } from '../../api';\n\ninterface Props {\n  setTodos: (param: Todo[]) => void;\n  setIsLoaded: (param: boolean) => void;\n  setIsLoadingError: (param: boolean) => void;\n}\n\nexport const LoadButton: FC<Props> = ({ setTodos, setIsLoaded, setIsLoadingError }) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const load = async (): Promise<void> => {\n    setIsLoadingError(false);\n    setIsLoading(true);\n    let users: User[] = [];\n    let todos: Todo[] = [];\n\n    try {\n      users = await getData('https://mate.academy/students-api/users');\n    } catch (_) {\n      setIsLoadingError(true);\n      setIsLoading(false);\n    }\n\n    try {\n      todos = await getData('https://mate.academy/students-api/todos');\n    } catch (_) {\n      setIsLoadingError(true);\n      setIsLoading(false);\n    }\n\n    if (users.length > 0 && todos.length > 0) {\n      setTodos(todos.map((todo) => ({\n        ...todo,\n        user: users.find(user => user.id === todo.userId),\n      })));\n      setIsLoaded(true);\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      disabled={isLoading}\n      onClick={load}\n    >\n      {isLoading ? 'Loading...' : 'Load'}\n    </button>\n  );\n};\n","import React, { FC, useState } from 'react';\n\nimport { Header } from './components/Header/Header';\nimport { View } from './components/View/View';\nimport { Error } from './components/Error/Error';\nimport { LoadButton } from './components/LoadButton/LoadButton';\nimport './App.css';\n\nconst App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoadingError, setIsLoadingError] = useState<boolean>(false);\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\n\n  return (\n    <>\n      <Header />\n      {isLoaded && <View todos={todos} />}\n      {isLoadingError && <Error />}\n      {\n        !isLoaded\n        && (\n          <LoadButton\n            setTodos={setTodos}\n            setIsLoaded={setIsLoaded}\n            setIsLoadingError={setIsLoadingError}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}