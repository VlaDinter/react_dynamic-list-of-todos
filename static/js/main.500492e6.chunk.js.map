{"version":3,"sources":["components/Header/Header.tsx","components/Todo/Todo.tsx","components/TodosList/TodosList.tsx","components/View/View.tsx","components/Error/Error.tsx","api.ts","components/LoadButton/LoadButton.tsx","App.tsx","index.tsx"],"names":["Header","className","Todo","todo","title","completed","user","name","TodosList","todos","map","key","id","View","useState","todosSortBy","setTodosSortBy","sort","todo1","todo2","localeCompare","type","onClick","Error","getData","url","fetch","then","response","json","data","LoadButton","setTodos","setIsLoadingError","isLoading","setIsLoading","load","a","users","length","find","userId","disabled","App","isLoadingError","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.500492e6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header: React.FC = () => {\n  return (\n    <h1 className=\"app__header\">Dynamic list of TODOs</h1>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\ninterface Props {\n  todo: Todo;\n}\n\nconst Todo: React.FC<Props> = ({ todo }) => {\n  return (\n    <li className=\"app__item\">\n      <h1 className=\"app__item-header\">{todo.title}</h1>\n      <p className=\"app__item-text\">\n        {todo.completed ? 'completed' : 'uncompleted'}\n      </p>\n      <p className=\"app__item-name\">{todo.user ? todo.user.name : 'none'}</p>\n    </li>\n  );\n};\n\nexport default Todo;\n","import React from 'react';\n\nimport Todo from '../Todo/Todo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nconst TodosList: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"app__list\">\n      {todos.map(todo => <Todo key={todo.id} todo={todo} />)}\n    </ul>\n  );\n};\n\nexport default TodosList;\n","import React, { FC, useState } from 'react';\n\nimport TodoList from '../TodosList/TodosList';\n\ninterface Props {\n  todos: Todo[];\n}\n\nconst View: FC<Props> = ({ todos }) => {\n  const [todosSortBy, setTodosSortBy] = useState<string>('title');\n\n  switch (todosSortBy) {\n    case 'title':\n      todos.sort((todo1, todo2) => todo1.title.localeCompare(todo2.title));\n      break;\n\n    case 'completed':\n      todos.sort((todo) => (todo.completed ? 1 : -1));\n      break;\n\n    case 'name':\n      todos.sort((todo1, todo2) => {\n        if (todo1.user && todo2.user) {\n          return todo1.user.name.localeCompare(todo2.user.name);\n        }\n\n        return 1;\n      });\n      break;\n\n    default:\n      todos.sort((todo1, todo2) => todo1.title.localeCompare(todo2.title));\n      break;\n  }\n\n  return (\n    <div className=\"app__view\">\n      <button\n        className=\"app__view-button\"\n        type=\"button\"\n        onClick={() => setTodosSortBy('title')}\n      >\n        Sort by title\n      </button>\n      <button\n        className=\"app__view-button\"\n        type=\"button\"\n        onClick={() => setTodosSortBy('completed')}\n      >\n        Sort by completed\n      </button>\n      <button\n        className=\"app__view-button\"\n        type=\"button\"\n        onClick={() => setTodosSortBy('name')}\n      >\n        Sort by name\n      </button>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n\nexport default View;\n","import React from 'react';\n\nconst Error: React.FC = () => {\n  return (\n    <p className=\"app__error\">Try again</p>\n  );\n};\n\nexport default Error;\n","const getData = (url: string): Promise<[]> => {\n  return fetch(url)\n    .then(response => response.json())\n    .then(response => response.data);\n};\n\nexport default getData;\n","import React, { FC, useState } from 'react';\n\nimport getData from '../../api';\n\ninterface Props {\n  setTodos: (param: Todo[]) => void;\n  setIsLoadingError: (param: boolean) => void;\n}\n\nconst LoadButton: FC<Props> = ({ setTodos, setIsLoadingError }) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const load = async (): Promise<void> => {\n    setIsLoadingError(false);\n    setIsLoading(true);\n    let users: User[] = [];\n    let todos: Todo[] = [];\n\n    try {\n      users = await getData('https://mate.academy/students-api/users');\n    } catch (_) {\n      setIsLoadingError(true);\n      setIsLoading(false);\n    }\n\n    try {\n      todos = await getData('https://mate.academy/students-api/todos');\n    } catch (_) {\n      setIsLoadingError(true);\n      setIsLoading(false);\n    }\n\n    if (users.length > 0 && todos.length > 0) {\n      setTodos(todos.map((todo) => ({\n        ...todo,\n        user: users.find(user => user.id === todo.userId),\n      })));\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      disabled={isLoading}\n      onClick={load}\n    >\n      {isLoading ? 'Loading...' : 'Load'}\n    </button>\n  );\n};\n\nexport default LoadButton;\n","import React, { FC, useState } from 'react';\n\nimport Header from './components/Header/Header';\nimport View from './components/View/View';\nimport Error from './components/Error/Error';\nimport LoadButton from './components/LoadButton/LoadButton';\nimport './App.css';\n\nconst App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoadingError, setIsLoadingError] = useState<boolean>(false);\n\n  return (\n    <>\n      <Header />\n      {todos.length > 0 && <View todos={todos} />}\n      {isLoadingError && <Error />}\n      {\n        todos.length === 0\n        && (\n          <LoadButton\n            setTodos={setTodos}\n            setIsLoadingError={setIsLoadingError}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}